// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id         String     @id @default(uuid())
  username   String     @unique
  email      String     @unique
  password   String
  firstname  String?
  lastname   String?
  businesses Business[] @relation("BusinessOwner")
  comments   Comment[]
  ratings    Rating[]
  favorites  Favorite[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

// Business model
model Business {
  id                    String     @id @default(uuid())
  ownerId               String
  businessName          String
  brandName             String?
  businessLicenseNumber String?
  businessAddress       String?
  businessPhone         String?
  verified              Boolean    @default(false)
  openingTime           DateTime?
  closingTime           DateTime?
  latitude              Decimal    @db.Decimal(9, 6) // Using Decimal
  longitude             Decimal    @db.Decimal(9, 6) // Using Decimal
  owner                 User       @relation("BusinessOwner", fields: [ownerId], references: [id])
  comments              Comment[]
  ratings               Rating[]
  favorites             Favorite[]
  photos                Photo[]
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
}

// Comment model
model Comment {
  id         String   @id @default(uuid())
  userId     String
  businessId String
  comment    String
  user       User     @relation(fields: [userId], references: [id])
  business   Business @relation(fields: [businessId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// Rating model
model Rating {
  id         String   @id @default(uuid())
  userId     String
  businessId String
  rating     Int
  user       User     @relation(fields: [userId], references: [id])
  business   Business @relation(fields: [businessId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// Favorite model
model Favorite {
  id         String   @id @default(uuid())
  userId     String
  businessId String
  user       User     @relation(fields: [userId], references: [id])
  business   Business @relation(fields: [businessId], references: [id])
  createdAt  DateTime @default(now())
}

// Photo model
model Photo {
  id         String   @id @default(uuid())
  businessId String
  url        String
  business   Business @relation(fields: [businessId], references: [id])
  createdAt  DateTime @default(now())
}
